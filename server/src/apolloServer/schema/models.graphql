interface Node {
    id: ID!
    createdAt: DATE!
    updatedAt: DATE!
}

enum AttachmantType {
    IMAGE,
    AUDIO,
    VIDEO,
    DOCUMENT
}

type User implements Node {
    id: ID!
    sex: SEX!,
    name: String!
    email: String!
    birthday: DATE!,
    online: Boolean!
    lastSeen: DATE!
    createdAt: DATE!
    updatedAt: DATE!
    chatsConnection(first: Int, after: String, last: Int, before: String): UserChatsConnection!
    friendsConnection(first: Int, after: String, last: Int, before: String): UserFriendsConnection!
}

type Chat implements Node {
    id: ID!
    img: String
    name: String
    createdAt: DATE!
    updatedAt: DATE!
    anonymous: Boolean!
    messagesConnection(first: Int, after: String, last: Int, before: String): ChatMessagesConnection!
    participantsConnection(first: Int, after: String, last: Int, before: String): ChatParticipantsConnection
}

type Message implements Node {
    id: ID!
    views: Int!
    text: String!
    createdAt: DATE!
    updatedAt: DATE!
    isEdited: Boolean!
    attachment: String
    attachmentType: AttachmantType
}
